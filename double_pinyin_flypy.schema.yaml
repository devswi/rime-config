# Rime schema
# encoding: utf-8

schema:
  schema_id: double_pinyin_flypy
  name: 小鹤双拼
  version: "2023-12-18"
  author:
    - double pinyin layout by 鶴
    - Rime schema by 佛振 <chen.sst@gmail.com>
    - Modified by Lufs_X <i@isteed.cc>
  description: |
    小鹤双拼方案。
    稍微的改了一下（小声

switches:
  - name: ascii_mode
    states: [ 中, Ａ ]
  - name: ascii_punct  # 中英标点
    states: [ ¥, $ ]
  - name: traditionalization
    states: [ 简, 繁 ]
  - name: emoji
    states: [ 💀, 😄 ]
    reset: 1
  - name: full_shape
    states: [ 半角, 全角 ]

# 输入引擎
engine:
  processors:
    - lua_processor@*select_character  # 以词定字
    - ascii_composer
    - recognizer
    - key_binder
    - speller
    - punctuator
    - selector
    - navigator
    - express_editor
  segmentors:
    - ascii_segmentor
    - matcher
    - abc_segmentor
    - affix_segmentor@radical_lookup  # 部件拆字自定义 tag
    - punct_segmentor
    - fallback_segmentor
  translators:
    - punct_translator
    - script_translator
    - lua_translator@*date_translator    # 时间、日期、星期
    - lua_translator@*lunar              # 农历
    - table_translator@custom_phrase     # 自定义短语 custom_phrase_double.txt
    - table_translator@melt_eng          # 英文输入
    - table_translator@cn_en             # 中英混合词汇
    - table_translator@radical_lookup    # 部件拆字反查
    - lua_translator@*unicode            # Unicode
    - lua_translator@*number_translator  # 数字、金额大写
    - lua_translator@*calc_translator    # 计算器
    - lua_translator@*force_gc           # 暴力 GC
  filters:
    - lua_filter@*corrector                         # 错音错字提示
    - reverse_lookup_filter@radical_reverse_lookup  # 部件拆字滤镜
    - lua_filter@*autocap_filter                    # 英文自动大写
    - lua_filter@*pin_cand_filter                   # 置顶候选项（顺序要求：置顶候选项 > Emoji > 简繁切换）
    - lua_filter@*reduce_english_filter             # 降低部分英语单词在候选项的位置
    - simplifier@emoji                              # Emoji
    - simplifier@traditionalize                     # 简繁切换
    - lua_filter@*search@radical_pinyin             # 部件拆字辅码
    - uniquifier                                    # 去重


traditionalize:
  option_name: traditionalization
  opencc_config: s2t.json # s2t.json | s2hk.json | s2tw.json | s2twp.json
  tips: none # 转换提示: all 显示 | char 仅单字显示 | none 不显示。

emoji_suggestion:
  opencc_config: emoji.json
  option_name: emoji_suggestion
  tips: false

speller:
  alphabet: zyxwvutsrqponmlkjihgfedcba/
  delimiter: " '"
  algebra:
    - erase/^xx$/
    - erase/^hm$/
    - erase/^m$/
    - erase/^n$/
    - erase/^ng$/

    # 模糊音区域
    # 依据个人情况修改注释～
    # 注释格式：键盘的输入码 -> 转化后的输入码

    # 声母部分
    # - derive/^([z])h/$1/ # z -> zh
    # - derive/^([z])([^h])/$1h$2/ # zh -> z
    # - derive/^([c])h/$1/ # c -> ch
    # - derive/^([c])([^h])/$1h$2/ # ch -> c
    # - derive/^([s])h/$1/ # s -> sh
    # - derive/^([s])([^h])/$1h$2/ # sh -> s
    # - derive/^l/n/ # n -> l
    # - derive/^n/l/ # l -> n
    # - derive/^r/l/ # l -> r
    # - derive/^r/y/ # y -> r
    # - derive/^hu$/fu/ # fu -> hu
    # - derive/^fu$/hu/ # hu -> fu

    # 韵母部分
    - derive/([^iu])([a])n$/$1$2ng/ # ang -> an
    - derive/([^iu])([a])ng$/$1$2n/ # an -> ang
    - derive/([e])n$/$1ng/ # eng -> en
    - derive/([e])ng$/$1n/ # en -> eng
    # - derive/([i])n$/$1ng/ # ing -> in
    # - derive/([i])ng$/$1n/ # in -> ing
    # - derive/([i])an$/$1ang/ # iang -> ian
    # - derive/([i])ang$/$1an/ # ian -> iang
    # 由于小鹤双拼特性，无需 uang <-> iang

    # 其它模糊音
    # - derive/^hui$/fei/ # fei -> hui
    # - derive/^fei$/hui/ # hui -> fei
    # - derive/^huang$/wang/ # wang -> huang
    # - derive/^wang$/huang/ # huang -> wang
    # - derive/^([bpmfw])eng$/$1ong/ # bpmfw 后接 ong -> bpmfw 后接 eng

    # 小鹤双拼码表
    - derive/^([jqxy])u$/$1v/
    - derive/^([aoe])([ioun])$/$1$1$2/
    - xform/^([aoe])(ng)?$/$1$1$2/
    - xform/iu$/Q/
    - xform/(.)ei$/$1W/
    - xform/uan$/R/
    - xform/[uv]e$/T/
    - xform/un$/Y/
    - xform/^sh/U/
    - xform/^ch/I/
    - xform/^zh/V/
    - xform/uo$/O/
    - xform/ie$/P/
    - xform/i?ong$/S/
    - xform/ing$|uai$/K/
    - xform/(.)ai$/$1D/
    - xform/(.)en$/$1F/
    - xform/(.)eng$/$1G/
    - xform/[iu]ang$/L/
    - xform/(.)ang$/$1H/
    - xform/ian$/M/
    - xform/(.)an$/$1J/
    - xform/(.)ou$/$1Z/
    - xform/[iu]a$/X/
    - xform/iao$/N/
    - xform/(.)ao$/$1C/
    - xform/ui$/V/
    - xform/in$/B/
    - xlit/QWRTYUIOPSDFGHJKLZXCVBNM/qwrtyuiopsdfghjklzxcvbnm/

    # 简拼支持
    - abbrev/^(.).+$/$1/

translator:
  dictionary: extended
  preedit_format:
    # - xform/ // # 去掉上屏字符间空格
  prism: lufs_flypy
  contextual_suggestions: true
  max_homophones: 7

grammar:
  language: zh-hans-t-essay-bgw

punctuator:
  import_preset: lufs_symbols

key_binder:
  import_preset: default

recognizer:
  import_preset: default

custom_phrase:
  dictionary: ""
  user_dict: custom_phrase
  db_class: stabledb
  enable_completion: false
  enable_sentence: true
  initial_quality: 1
